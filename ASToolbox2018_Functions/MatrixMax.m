function local_max = MatrixMax(mat,nb,factor)%Locates local maxima of a matrix.%%   local_max = MatrixMax(mat,nb,factor)%   Calculates the location of the "local" maxima of the matrix mat. %   In each column, every  element is compared with its neighbors up to%   "distance"  nb. Just the values which are larger than factor*(global_max), %   where global_max denotes the "global" maximum of mat, are selected.%%   INPUTS: %       mat - a matrix (whose locattion of local maxima we want to compute).%   Optional inputs:%       nb  - 2*nb+1 is the number of points used to compute a maximum%            (Default: nb = 2).%       factor - factor of the global maximum used to select a maximum%             (Default: factor = 0).%%    OUTPUT: %       local_max - a 0-1 matrix, with the same size of mat, giving the %       location of the maxima (1 if the respective element is a maximum,%       0 otherwise).%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%       THIS IS A  SLIGHT  MODIFICATION OF THE FUNCTION%%                       WAVELETRIDGE%%                             by% Bernard CAZELLES                     Mario CHAVEZ% Ecology-Evolution-Mathematics            LENA% CNRS - UMR 7625 - 2005                   CNRS - LPR 640 - 2005%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  Written by L. Aguiar-Conraria and M.J. Soares%%   Luís AGUIAR-CONRARIA              Maria Joana SOARES                      %   Dep. Economics                    Dep. Mathematics and Applications   %   University of Minho               University of Minho%   4710-057 Braga                    4710-057 Braga%   PORTUGAL                          PORTUGAL%                           %   lfaguiar@eeg.uminho.pt            jsoares@math.uminho.pt %%%%%%%%%%%%%%%%%%%%%%%%%% Default values %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if ( nargin < 2 || isempty(nb) ), nb = 2; end;if ( nargin < 3 ), factor = 0; end;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%[n_rows,n_cols] = size(mat);local_max = zeros(n_rows,n_cols);global_max = factor*max(mat(:)); % Global maximum of the matrixfor jj=1:n_cols	for ii=1+nb:n_rows-nb        if ( max(mat(ii-nb:ii+nb,jj)) == mat(ii,jj) && mat(ii,jj)>global_max )            local_max(ii,jj) = 1;        end	end   for ii=1:nb      if ( max(mat(1:ii+nb,jj)) == mat(ii,jj) && mat(ii,jj) > global_max )            local_max(ii,jj) = 1;      end   end   for ii=n_rows-nb+1:n_rows      if ( max(mat(ii-nb:n_rows,jj)) == mat(ii,jj) && mat(ii,jj) > global_max )            local_max(ii,jj) = 1;      end   endend%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%end